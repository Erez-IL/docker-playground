%-*-Erlang-*-
[{setup, [{data_dir, "/var/lib/ergw"},
	  {log_dir,  "/data/"}				%% NOTE: lager is not using this
	 ]},

 {kernel,
  [{logger_level, debug},
   {logger,
    [{handler, default, logger_std_h,
      #{level => debug,
	formatter =>
	    {logger_formatter,
	     #{single_line => true,
	       legacy_header => false,
	       template => [time," ",pid," ",level,": ",msg,"\n"]
	      }},
	config =>
	    #{sync_mode_qlen => 10000,
	      drop_mode_qlen => 10000,
	      flush_qlen     => 10000}
       }
     }
    ]}
  ]},

 {ergw, [{'$setup_vars',
	  [{"ORIGIN", {value, "epc.mnc001.mcc001.3gppnetwork.org"}}]},
	 {http_api,
	  [{port, 8080},
	   {ip, {0,0,0,0}}
	  ]},
	 {sockets,
	  [{'cp-socket',
	    [{type, 'gtp-u'},
	     {vrf, cp},
	     {ip,  {172,21,16,2}},
	     freebind,
	     {reuseaddr, true}
	    ]},
	   {irx, [{type, 'gtp-c'},
		  {vrf, epc},
		  {ip,  {172,21,16,2}},
		  {reuseaddr, true}
		 ]}
	  ]},

	 {ip_pools,
	  [{'SGi',  [{ranges, [{{10, 106, 0, 1}, {10, 106, 255, 254}, 32},
			       {{16#8001, 0, 0, 0, 0, 0, 0, 0},
				{16#8001, 0, 0, 16#FFFF, 0, 0, 0, 0}, 64}
			      ]},
		     {'MS-Primary-DNS-Server', {8,8,8,8}},
		     {'MS-Secondary-DNS-Server', {8,8,4,4}},
		     {'MS-Primary-NBNS-Server', {127,0,0,1}},
		     {'MS-Secondary-NBNS-Server', {127,0,0,1}}
		    ]}
	  ]},

	 {sx_socket,
	  [{node, 'ergw'},
	   {name, 'ergw'},
	   {socket, 'cp-socket'},
	   {ip,  {172,21,16,2}},
	   {reuseaddr, true},
	   freebind
	  ]},

	 {handlers,
	  [{'h1', [{handler, pgw_s5s8},
		   {protocol, gn},
		   {sockets, [irx]},
		   {node_selection, [default]}
		  ]},
	   {'h2', [{handler, pgw_s5s8},
		   {protocol, s5s8},
		   {sockets, [irx]},
		   {node_selection, [default]}
		  ]}
	  ]},

	 {apns,
	  [{'_', [{vrf, sgi}, {ip_pools, ['SGi']}]}]},

	 {node_selection,
	  [{default,
	    {static,
	     [
	      %% APN NAPTR alternative
	      {"_default.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-pgw","x-s5-gtp"},{"x-3gpp-pgw","x-s8-gtp"},
		{"x-3gpp-pgw","x-gn"},{"x-3gpp-pgw","x-gp"}],
	       "topon.s5s8.pgw.$ORIGIN"},
	      {"_default.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-upf","x-sxb"}],
	       "topon.sx.prox01.$ORIGIN"},

	      %% A/AAAA record alternatives
	      {"topon.s5s8.pgw.$ORIGIN",  [{172, 21, 16, 2}], []},
	      {"topon.sx.prox01.$ORIGIN", [{172,21,16,3}], []}
	     ]
	    }
	   }
	  ]
	 },

	 {charging,
	  [{default,
	    [{rulebase,
	      [{<<"r-0001">>,
		#{'Rating-Group' => [3000],
		  'Flow-Information' =>
		      [#{'Flow-Description' => [<<"permit out ip from any to assigned">>],
			 'Flow-Direction'   => [1]    %% DownLink
			},
		       #{'Flow-Description' => [<<"permit out ip from any to assigned">>],
			 'Flow-Direction'   => [2]    %% UpLink
			}],
		  'Metering-Method'  => [1],
		  'Precedence' => [100],
		  'Online'  => [0],
		  'Offline'  => [0]
		 }},
	       {<<"m2m0001">>, [<<"r-0001">>]}
	      ]}
	    ]}
	  ]},

	 {nodes,
	  [{default,
	    [{vrfs,
	      [{cp, [{features, ['CP-Function']}]},
	       {epc, [{features, ['Access']}]},
	       {sgi, [{features, ['SGi-LAN']}]}]
	     },
	     {ip_pools, ['SGi']}
	    ]},
	   {"topon.sx.prox01.$ORIGIN", [connect]}
	  ]
	 }
	]},

 {ergw_aaa,
  [{handlers,
    [{ergw_aaa_static,
	[{'NAS-Identifier',          <<"NAS-Identifier">>},
	 {'Framed-Protocol',         'PPP'},
	 {'Service-Type',            'Framed-User'},
	 {'Node-Id',                 <<"PGW-001">>},
	 {'Charging-Rule-Base-Name', <<"m2m0001">>}
	 %% {'Offline-Charging-Profile',
	 %%  #{'Default' => #{'Tariff-Time' => {13, 20}}}}
	]}
    ]},

   {services,
    [{'Default', [{handler, 'ergw_aaa_static'},
		  {answers,
		   #{'Initial-Gx' =>
			 #{'Result-Code' => 2001,
			   'Charging-Rule-Install' =>
			       [#{'Charging-Rule-Base-Name' => [<<"m2m0001">>]}]
			  },
		     'Update-Gx' => #{'Result-Code' => 2001},
		     'Final-Gx' => #{'Result-Code' => 2001}
		    }
		  }
		 ]}
    ]},

   {apps,
    [{default,
      [{session, ['Default']},
       {procedures, [{authenticate, []},
		     {authorize, []},
		     {start, []},
		     {interim, []},
		     {stop, []},

		     {{gx, 'CCR-Initial'},   [{'Default', [{answer, 'Initial-Gx'}]}]},
		     {{gx, 'CCR-Update'},    [{'Default', [{answer, 'Update-Gx'}]}]},
		     {{gx, 'CCR-Terminate'}, [{'Default', [{answer, 'Final-Gx'}]}]}
		    ]}
      ]}
    ]}
 ]},

 {hackney, [
	    {mod_metrics, exometer}
	    ]},

 {jobs, [{samplers,
	  [{cpu_feedback, jobs_sampler_cpu, []}
	  ]},
	 {queues,
	  [{path_restart,
	    [{regulators, [{counter, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {create,
	    [{max_time, 5000}, %% max 5 seconds
	     {regulators, [{rate, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {delete,
	    [{regulators, [{counter, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {other,
	    [{max_time, 10000}, %% max 10 seconds
	     {regulators, [{rate, [{limit, 1000}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]}
	  ]}
	]}
].
